[
  {
    "title": "Building RESTful APIs with Express.js",
    "content": "Express.js is a lightweight and flexible Node.js framework for building APIs. It simplifies routing, middleware management, and request/response handling, making it easier to create RESTful services.",
    "category": "Backend Development",
    "author": "Jane Smith",
    "image": "https://via.placeholder.com/800x400.png?text=Building+RESTful+APIs+with+Express.js",
    "createdAt": "2025-01-03T10:00:00Z",
    "updatedAt": "2025-01-03T10:00:00Z"
  },
  {
    "title": "Asynchronous Programming in Node.js",
    "content": "Asynchronous programming is a core feature of Node.js, allowing it to handle multiple tasks without blocking execution. With the help of callbacks, promises, and async/await syntax, developers can write clean and efficient asynchronous code.",
    "category": "Backend Development",
    "author": "Michael Lee",
    "image": "https://via.placeholder.com/800x400.png?text=Building+RESTful+APIs+with+Express.js",
    "createdAt": "2025-01-03T11:00:00Z",
    "updatedAt": "2025-01-03T11:00:00Z"
  },
  {
    "title": "Understanding Node.js Basics",
    "content": "Node.js is a server-side JavaScript runtime that enables developers to build scalable, high-performance applications. It uses an event-driven, non-blocking I/O model, making it ideal for handling simultaneous connections efficiently.",
    "category": "Backend Development",
    "author": "John Doe",
    "image": "https://via.placeholder.com/800x400.png?text=Building+RESTful+APIs+with+Express.js",
    "createdAt": "2025-01-03T12:00:00Z",
    "updatedAt": "2025-01-03T12:00:00Z"
  },
  {
    "title": "Deploying Node.js Applications",
    "content": "Deploying Node.js applications involves preparing your application for production use. This process includes setting up a server environment, using tools like PM2, and configuring reverse proxies such as Nginx or Apache.",
    "category": "DevOps",
    "author": "Sarah Johnson",
    "image": "https://via.placeholder.com/800x400.png?text=Building+RESTful+APIs+with+Express.js",
    "createdAt": "2025-01-03T13:00:00Z",
    "updatedAt": "2025-01-03T13:00:00Z"
  },
  {
    "title": "Real-time Applications with WebSockets in Node.js",
    "content": "WebSockets enable full-duplex communication between clients and servers, making them ideal for real-time applications like chat apps, live notifications, and collaborative tools.",
    "category": "Backend Development",
    "author": "Emily Davis",
    "image": "https://via.placeholder.com/800x400.png?text=Building+RESTful+APIs+with+Express.js",
    "createdAt": "2025-01-03T14:00:00Z",
    "updatedAt": "2025-01-03T14:00:00Z"
  },
  {
    "title": "Node.js and MongoDB Integration",
    "content": "MongoDB, a NoSQL database, pairs seamlessly with Node.js to create dynamic and scalable applications. Using libraries like Mongoose, developers can interact with MongoDB through a simple and powerful API.",
    "category": "Database",
    "author": "Nathan Walker",
    "image": "https://via.placeholder.com/800x400.png?text=Building+RESTful+APIs+with+Express.js",
    "createdAt": "2025-01-03T15:00:00Z",
    "updatedAt": "2025-01-03T15:00:00Z"
  },
  {
    "title": "Optimizing Node.js Performance",
    "content": "Optimizing performance in Node.js applications involves identifying bottlenecks and implementing caching, clustering, and monitoring tools to ensure high scalability.",
    "category": "Backend Development",
    "author": "Anna Taylor",
    "image": "https://via.placeholder.com/800x400.png?text=Building+RESTful+APIs+with+Express.js",
    "createdAt": "2025-01-03T16:00:00Z",
    "updatedAt": "2025-01-03T16:00:00Z"
  },
  {
    "title": "Scaling Node.js Applications",
    "content": "Scaling Node.js applications effectively involves techniques such as clustering, load balancing, and implementing microservices architecture to handle increased traffic.",
    "category": "Backend Development",
    "author": "Chris Green",
    "image": "https://via.placeholder.com/800x400.png?text=Building+RESTful+APIs+with+Express.js",
    "createdAt": "2025-01-03T17:00:00Z",
    "updatedAt": "2025-01-03T17:00:00Z"
  }
]
